name: Build

on: [push, pull_request]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  linux:
    name: Linux commands
    runs-on: ubuntu-latest
    steps:
      - name: disk space before
        run: sudo df -h
      - name: clean
        run: 
          #!/usr/bin/env bash
          # Licensed to the Apache Software Foundation (ASF) under one or more
          # contributor license agreements.  See the NOTICE file distributed with
          # this work for additional information regarding copyright ownership.
          # The ASF licenses this file to You under the Apache License, Version 2.0
          # (the "License"); you may not use this file except in compliance with
          # the License.  You may obtain a copy of the License at
          #
          #    http://www.apache.org/licenses/LICENSE-2.0
          #
          # Unless required by applicable law or agreed to in writing, software
          # distributed under the License is distributed on an "AS IS" BASIS,
          # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
          # See the License for the specific language governing permissions and
          # limitations under the License.


          #
          # The Azure provided machines typically have the following disk allocation:
          # Total space: 85GB
          # Allocated: 67 GB
          # Free: 17 GB
          # This script frees up 28 GB of disk space by deleting unneeded packages and 
          # large directories.
          # The Flink end to end tests download and generate more than 17 GB of files,
          # causing unpredictable behavior and build failures.
          #
          echo "=============================================================================="
          echo "Freeing up disk space on CI system"
          echo "=============================================================================="

          echo "Listing 100 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          df -h
          echo "Removing large packages"
          sudo apt-get remove -y '^ghc-8.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          rm -rf /usr/share/dotnet/
          df -h
      - name: disk space after
        run: sudo df -h
  build:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - SpaceUber
        unityVersion:
          - 2019.4.8f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-builder@v2.0-alpha-6
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: A Cog in the Cosmic Machine-${{ matrix.targetPlatform }}
          versioning: None
          customParameters: -CompressWithLz4HC
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
  deploy:
    if: (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/master')  && github.event_name == 'push'
    needs: build
    name: Deployment for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - SpaceUber
        unityVersion:
          - 2019.4.8f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- WebGL # WebGL.
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Build
          path: build
      - uses: josephbmanley/butler-publish-itchio-action@v1.0.2
        if: github.ref == 'refs/heads/development' && github.event_name == 'push'
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: ${{ matrix.targetPlatform }}
          ITCH_GAME: a-cog-in-the-cosmic-machine-dev
          ITCH_USER: partyparrotpatrolparade
          PACKAGE: build/${{ matrix.targetPlatform }}
      - uses: josephbmanley/butler-publish-itchio-action@v1.0.2
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
          CHANNEL: ${{ matrix.targetPlatform }}
          ITCH_GAME: a-cog-in-the-cosmic-machine
          ITCH_USER: partyparrotpatrolparade
          PACKAGE: build/${{ matrix.targetPlatform }}
